// Realistic US phone number generator
// Eliminates all fake 892 numbers with authentic area codes and exchanges

export class PhoneNumberGenerator {
  private static validAreaCodes = [
    '212', '718', '929', '347', // New York
    '213', '323', '424', '747', // Los Angeles
    '312', '773', '872',        // Chicago
    '713', '281', '832',        // Houston
    '602', '480', '623',        // Phoenix
    '215', '267', '445',        // Philadelphia
    '210', '726',               // San Antonio
    '619', '858', '760',        // San Diego
    '214', '469', '972',        // Dallas
    '408', '415', '650',        // San Jose/SF
    '512', '737',               // Austin
    '904', '407',               // Jacksonville/Orlando
    '817', '682',               // Fort Worth
    '614', '380',               // Columbus
    '704', '980',               // Charlotte
    '415', '628',               // San Francisco
    '317', '463',               // Indianapolis
    '206', '253', '425',        // Seattle
    '303', '720',               // Denver
    '202',                      // Washington DC
    '617', '857',               // Boston
    '615', '629',               // Nashville
    '313', '248', '734',        // Detroit
    '405', '572',               // Oklahoma City
    '503', '971',               // Portland
    '702', '725',               // Las Vegas
    '901', '731',               // Memphis
    '502', '364',               // Louisville
    '410', '443', '667',        // Baltimore
    '414', '262'                // Milwaukee
  ];

  private static validExchanges = [
    '201', '202', '203', '204', '205', '206', '207', '208', '209',
    '211', '212', '213', '214', '215', '216', '217', '218', '219',
    '221', '222', '223', '224', '225', '226', '227', '228', '229',
    '231', '232', '233', '234', '235', '236', '237', '238', '239',
    '241', '242', '243', '244', '245', '246', '247', '248', '249',
    '251', '252', '253', '254', '256', '257', '258', '259',
    '261', '262', '263', '264', '265', '266', '267', '268', '269',
    '271', '272', '273', '274', '275', '276', '277', '278', '279',
    '281', '282', '283', '284', '285', '286', '287', '288', '289',
    '291', '292', '293', '294', '295', '296', '297', '298', '299',
    '301', '302', '303', '304', '305', '306', '307', '308', '309',
    '311', '312', '313', '314', '315', '316', '317', '318', '319',
    '321', '322', '323', '324', '325', '326', '327', '328', '329',
    '331', '332', '333', '334', '335', '336', '337', '338', '339',
    '341', '342', '343', '344', '345', '346', '347', '348', '349',
    '351', '352', '353', '354', '356', '357', '358', '359',
    '361', '362', '363', '364', '365', '366', '367', '368', '369',
    '371', '372', '373', '374', '375', '376', '377', '378', '379',
    '381', '382', '383', '384', '385', '386', '387', '388', '389',
    '391', '392', '393', '394', '395', '396', '397', '398', '399',
    '401', '402', '403', '404', '405', '406', '407', '408', '409',
    '411', '412', '413', '414', '415', '416', '417', '418', '419',
    '421', '422', '423', '424', '425', '426', '427', '428', '429',
    '431', '432', '433', '434', '435', '436', '437', '438', '439',
    '441', '442', '443', '444', '446', '447', '448', '449',
    '451', '452', '453', '454', '456', '457', '458', '459',
    '461', '462', '463', '464', '465', '466', '467', '468', '469',
    '471', '472', '473', '474', '475', '476', '477', '478', '479',
    '481', '482', '483', '484', '485', '486', '487', '488', '489',
    '491', '492', '493', '494', '495', '496', '497', '498', '499',
    '501', '502', '503', '504', '505', '506', '507', '508', '509',
    '511', '512', '513', '514', '515', '516', '517', '518', '519',
    '521', '522', '523', '524', '525', '526', '527', '528', '529',
    '531', '532', '533', '534', '535', '536', '537', '538', '539',
    '541', '542', '543', '544', '545', '546', '547', '548', '549',
    '551', '552', '553', '554', '556', '557', '558', '559',
    '561', '562', '563', '564', '565', '566', '567', '568', '569',
    '571', '572', '573', '574', '575', '576', '577', '578', '579',
    '581', '582', '583', '584', '585', '586', '587', '588', '589',
    '591', '592', '593', '594', '595', '596', '597', '598', '599',
    '601', '602', '603', '604', '605', '606', '607', '608', '609',
    '611', '612', '613', '614', '615', '616', '617', '618', '619',
    '621', '622', '623', '624', '625', '626', '627', '628', '629',
    '631', '632', '633', '634', '635', '636', '637', '638', '639',
    '641', '642', '643', '644', '645', '646', '647', '648', '649',
    '651', '652', '653', '654', '656', '657', '658', '659',
    '661', '662', '663', '664', '665', '666', '667', '668', '669',
    '671', '672', '673', '674', '675', '676', '677', '678', '679',
    '681', '682', '683', '684', '685', '686', '687', '688', '689',
    '691', '692', '693', '694', '695', '696', '697', '698', '699',
    '701', '702', '703', '704', '705', '706', '707', '708', '709',
    '711', '712', '713', '714', '715', '716', '717', '718', '719',
    '721', '722', '723', '724', '725', '726', '727', '728', '729',
    '731', '732', '733', '734', '735', '736', '737', '738', '739',
    '741', '742', '743', '744', '745', '746', '747', '748', '749',
    '751', '752', '753', '754', '756', '757', '758', '759',
    '761', '762', '763', '764', '765', '766', '767', '768', '769',
    '771', '772', '773', '774', '775', '776', '777', '778', '779',
    '781', '782', '783', '784', '785', '786', '787', '788', '789',
    '791', '792', '793', '794', '795', '796', '797', '798', '799',
    '801', '802', '803', '804', '805', '806', '807', '808', '809',
    '811', '812', '813', '814', '815', '816', '817', '818', '819',
    '821', '822', '823', '824', '825', '826', '827', '828', '829',
    '831', '832', '833', '834', '835', '836', '837', '838', '839',
    '841', '842', '843', '844', '845', '846', '847', '848', '849',
    '851', '852', '853', '854', '856', '857', '858', '859',
    '861', '862', '863', '864', '865', '866', '867', '868', '869',
    '871', '872', '873', '874', '875', '876', '877', '878', '879',
    '881', '882', '883', '884', '885', '886', '887', '888', '889',
    '891', '892', '893', '894', '895', '896', '897', '898', '899',
    '901', '902', '903', '904', '905', '906', '907', '908', '909',
    '911', '912', '913', '914', '915', '916', '917', '918', '919',
    '921', '922', '923', '924', '925', '926', '927', '928', '929',
    '931', '932', '933', '934', '935', '936', '937', '938', '939',
    '941', '942', '943', '944', '945', '946', '947', '948', '949',
    '951', '952', '953', '954', '956', '957', '958', '959',
    '961', '962', '963', '964', '965', '966', '967', '968', '969',
    '971', '972', '973', '974', '975', '976', '977', '978', '979',
    '981', '982', '983', '984', '985', '986', '987', '988', '989',
    '991', '992', '993', '994', '995', '996', '997', '998', '999'
  ];

  static generateRealistic(format: 'parentheses' | 'dashes' | 'international' = 'parentheses'): string {
    const areaCode = this.validAreaCodes[Math.floor(Math.random() * this.validAreaCodes.length)];
    const exchange = this.validExchanges[Math.floor(Math.random() * this.validExchanges.length)];
    const subscriber = String(Math.floor(Math.random() * 9000) + 1000);

    switch (format) {
      case 'parentheses':
        return `(${areaCode}) ${exchange}-${subscriber}`;
      case 'dashes':
        return `${areaCode}-${exchange}-${subscriber}`;
      case 'international':
        return `+1-${areaCode}-${exchange}-${subscriber}`;
      default:
        return `(${areaCode}) ${exchange}-${subscriber}`;
    }
  }

  static generateForAreaCode(areaCode: string, format: 'parentheses' | 'dashes' | 'international' = 'parentheses'): string {
    const exchange = this.validExchanges[Math.floor(Math.random() * this.validExchanges.length)];
    const subscriber = String(Math.floor(Math.random() * 9000) + 1000);

    switch (format) {
      case 'parentheses':
        return `(${areaCode}) ${exchange}-${subscriber}`;
      case 'dashes':
        return `${areaCode}-${exchange}-${subscriber}`;
      case 'international':
        return `+1-${areaCode}-${exchange}-${subscriber}`;
      default:
        return `(${areaCode}) ${exchange}-${subscriber}`;
    }
  }
}